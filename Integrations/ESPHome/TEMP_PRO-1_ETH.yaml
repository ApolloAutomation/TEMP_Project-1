esphome:
  name: "apollo-temp-pro-1-eth"
  friendly_name: Apollo TEMP_PRO-1 ETH
  comment: Apollo TEMP_PRO-1 ETH
  name_add_mac_suffix: true
  platformio_options:
    board_build.flash_mode: dio

  project:
    name: "ApolloAutomation.TEMP_PRO-1-ETH"
    version: "${version}"

  min_version: 2025.2.0
  on_boot:
    - priority: 500
      then:
        - lambda: |-
            id(deep_sleep_1).set_sleep_duration(id(deep_sleep_sleep_duration).state * 60 * 60 * 1000);
        - if:
            condition:
              or:
                - binary_sensor.is_on: ota_mode
                - switch.is_on: prevent_sleep
            then:
              - lambda: |- 
                  ESP_LOGW("Apollo", "Preventing Deep Sleep Due To OTA On Boot");
                  id(deep_sleep_1).prevent_deep_sleep();

dashboard_import:
  package_import_url: github://ApolloAutomation/TEMP_PROJECT-1/Integrations/ESPHome/TEMP_PRO-1_ETH.yaml
  import_full_config: false

ota:
  - platform: esphome
    id: ota_esphome
  - platform: http_request
    id: ota_managed

http_request:
  verify_ssl: true

safe_mode:

update:
  - platform: http_request
    id: update_http_request
    name: Firmware Update
    source: https://apolloautomation.github.io/TEMP_PROJECT-1/firmware-e/manifest.json

logger:

ethernet:  
  type: W5500  
  clk_pin: GPIO10  
  mosi_pin: GPIO12 
  miso_pin: GPIO11
  cs_pin: GPIO9
  interrupt_pin: GPIO13
  reset_pin: GPIO14

script:
  - id: statusCheck
    then:
      - if:
          condition:
            - lambda: 'return id(ink_ha_connected).state;'
          then:
            - logger.log: "Apollo Automation: Connected To HA"
            - light.turn_on: 
                id: rgb_light
                brightness: 100%
                red: 0%
                green: 0%
                blue: 100%
      - delay: 5s
      - light.turn_off: rgb_light

select:
  - platform: template
    id: firmware_selector
    name: Firmware Type
    icon: "mdi:test-tube"
    entity_category: config
    optimistic: true
    restore_value: true
    options:
      - "WiFi"
      - "Ethernet"
    initial_option: "Ethernet"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(firmware_selector).state == "Ethernet";'
            then:
              - logger.log: "OTA updates set to use ethernet firmware"
              - lambda: id(update_http_request).set_source_url("https://apolloautomation.github.io/TEMP_PROJECT-1/firmware-e/manifest.json");
              - component.update: update_http_request
            else:
              - logger.log: "OTA updates set to use wifi firmware"
              - lambda: id(update_http_request).set_source_url("https://apolloautomation.github.io/TEMP_PROJECT-1/firmware-w/manifest.json");
              - component.update: update_http_request


packages:
  core: !include Core.yaml
  battery: !include Battery.yaml
